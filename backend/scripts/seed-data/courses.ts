// Course seed data organized by department
export const coursesData = [
  // Computer Science and Engineering Courses
  {
    name: 'Introduction to Programming',
    code: 'CSE101',
    description: 'Fundamental programming concepts using Python. Introduction to algorithms, data types, control structures, and basic problem-solving techniques.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: null,
    corequisites: null,
    learningOutcomes: 'Students will learn basic programming concepts, problem-solving techniques, and develop simple programs using Python.',
    syllabus: 'Variables and data types, control structures (if-else, loops), functions, basic data structures (lists, dictionaries), file handling, error handling, introduction to object-oriented programming.',
    assessmentMethods: 'Continuous assessment (40%), Mid-semester exam (20%), Final exam (40%)',
    recommendedBooks: 'Python Programming: An Introduction to Computer Science by John Zelle; Think Python by Allen Downey',
    departmentCode: 'CSE',
    isActive: true
  },
  {
    name: 'Data Structures and Algorithms',
    code: 'CSE201',
    description: 'Advanced data structures and algorithmic thinking. Analysis of algorithms, complexity theory, and implementation of efficient data structures.',
    creditHours: 3,
    contactHours: 45,
    level: 200,
    courseType: 'CORE',
    prerequisites: '["CSE101"]',
    corequisites: '["MATH201"]',
    learningOutcomes: 'Students will master fundamental data structures, algorithm analysis, and efficient problem-solving techniques.',
    syllabus: 'Arrays and linked lists, stacks and queues, trees and graphs, sorting algorithms, searching algorithms, hash tables, algorithm analysis and Big-O notation.',
    assessmentMethods: 'Programming assignments (30%), Tests (30%), Final exam (40%)',
    recommendedBooks: 'Introduction to Algorithms by Cormen, Leiserson, Rivest, and Stein; Data Structures and Algorithm Analysis by Mark Allen Weiss',
    departmentCode: 'CSE',
    isActive: true
  },
  {
    name: 'Object-Oriented Programming',
    code: 'CSE202',
    description: 'Object-oriented programming principles using Java. Classes, objects, inheritance, polymorphism, and design patterns.',
    creditHours: 3,
    contactHours: 45,
    level: 200,
    courseType: 'CORE',
    prerequisites: '["CSE101"]',
    corequisites: null,
    learningOutcomes: 'Students will understand OOP principles and develop complex applications using object-oriented design.',
    syllabus: 'Classes and objects, encapsulation, inheritance, polymorphism, abstract classes and interfaces, exception handling, collections framework, design patterns.',
    assessmentMethods: 'Programming projects (40%), Mid-semester exam (25%), Final exam (35%)',
    recommendedBooks: 'Java: The Complete Reference by Herbert Schildt; Effective Java by Joshua Bloch',
    departmentCode: 'CSE',
    isActive: true
  },
  {
    name: 'Database Systems',
    code: 'CSE301',
    description: 'Database design, implementation, and management. Relational model, SQL, normalization, and database administration.',
    creditHours: 3,
    contactHours: 45,
    level: 300,
    courseType: 'CORE',
    prerequisites: '["CSE201"]',
    corequisites: null,
    learningOutcomes: 'Students will design, implement, and manage relational databases using industry-standard tools.',
    syllabus: 'Database concepts, ER modeling, relational model, SQL, normalization, indexing, transactions, concurrency control, database security.',
    assessmentMethods: 'Database project (35%), Tests (30%), Final exam (35%)',
    recommendedBooks: 'Database System Concepts by Silberschatz, Korth, and Sudarshan; Fundamentals of Database Systems by Elmasri and Navathe',
    departmentCode: 'CSE',
    isActive: true
  },
  {
    name: 'Software Engineering',
    code: 'CSE302',
    description: 'Software development lifecycle, project management, and software engineering principles. Requirements analysis, design, testing, and maintenance.',
    creditHours: 3,
    contactHours: 45,
    level: 300,
    courseType: 'CORE',
    prerequisites: '["CSE202"]',
    corequisites: null,
    learningOutcomes: 'Students will understand software engineering principles and manage software development projects.',
    syllabus: 'SDLC models, requirements engineering, software design, coding standards, testing strategies, project management, version control, agile methodologies.',
    assessmentMethods: 'Group project (40%), Individual assignment (25%), Final exam (35%)',
    recommendedBooks: 'Software Engineering: A Practitioner\'s Approach by Roger Pressman; The Mythical Man-Month by Frederick Brooks',
    departmentCode: 'CSE',
    isActive: true
  },

  // Mathematics Courses
  {
    name: 'Calculus I',
    code: 'MATH101',
    description: 'Differential calculus of single-variable functions. Limits, derivatives, and applications of derivatives.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: null,
    corequisites: null,
    learningOutcomes: 'Students will understand limits, derivatives, and apply calculus to solve real-world problems.',
    syllabus: 'Functions and graphs, limits and continuity, derivatives, rules of differentiation, applications of derivatives, optimization problems.',
    assessmentMethods: 'Assignments (20%), Tests (40%), Final exam (40%)',
    recommendedBooks: 'Calculus: Early Transcendentals by James Stewart; Calculus by Michael Spivak',
    departmentCode: 'MATH',
    isActive: true
  },
  {
    name: 'Calculus II',
    code: 'MATH102',
    description: 'Integral calculus and infinite series. Techniques of integration, applications of integrals, and series convergence.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: '["MATH101"]',
    corequisites: null,
    learningOutcomes: 'Students will master integration techniques and understand infinite series.',
    syllabus: 'Antiderivatives, definite integrals, fundamental theorem of calculus, techniques of integration, applications of integrals, infinite series.',
    assessmentMethods: 'Assignments (20%), Tests (40%), Final exam (40%)',
    recommendedBooks: 'Calculus: Early Transcendentals by James Stewart; Calculus by Michael Spivak',
    departmentCode: 'MATH',
    isActive: true
  },
  {
    name: 'Discrete Mathematics',
    code: 'MATH201',
    description: 'Mathematical foundations for computer science. Logic, sets, functions, relations, graph theory, and combinatorics.',
    creditHours: 3,
    contactHours: 45,
    level: 200,
    courseType: 'CORE',
    prerequisites: '["MATH101"]',
    corequisites: null,
    learningOutcomes: 'Students will understand discrete mathematical structures essential for computer science.',
    syllabus: 'Propositional and predicate logic, sets and functions, relations, graph theory, trees, combinatorics, number theory, Boolean algebra.',
    assessmentMethods: 'Assignments (25%), Tests (35%), Final exam (40%)',
    recommendedBooks: 'Discrete Mathematics and Its Applications by Kenneth Rosen; Discrete Mathematics by Richard Johnsonbaugh',
    departmentCode: 'MATH',
    isActive: true
  },

  // Physics Courses
  {
    name: 'General Physics I',
    code: 'PHYS101',
    description: 'Mechanics and thermodynamics. Kinematics, dynamics, energy, momentum, rotational motion, and thermal physics.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: null,
    corequisites: '["MATH101"]',
    learningOutcomes: 'Students will understand fundamental principles of mechanics and thermodynamics.',
    syllabus: 'Kinematics in one and two dimensions, Newton\'s laws, work and energy, momentum, rotational motion, gravitation, fluid mechanics, thermodynamics.',
    assessmentMethods: 'Laboratory reports (20%), Tests (40%), Final exam (40%)',
    recommendedBooks: 'University Physics by Young and Freedman; Principles of Physics by Halliday, Resnick, and Walker',
    departmentCode: 'PHYS',
    isActive: true
  },
  {
    name: 'General Physics II',
    code: 'PHYS102',
    description: 'Electricity, magnetism, and waves. Electric fields, magnetic fields, electromagnetic induction, and wave phenomena.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: '["PHYS101"]',
    corequisites: '["MATH102"]',
    learningOutcomes: 'Students will understand electromagnetic theory and wave physics.',
    syllabus: 'Electric charge and fields, Gauss\'s law, electric potential, capacitance, current and resistance, magnetic fields, electromagnetic induction, AC circuits, waves.',
    assessmentMethods: 'Laboratory reports (20%), Tests (40%), Final exam (40%)',
    recommendedBooks: 'University Physics by Young and Freedman; Principles of Physics by Halliday, Resnick, and Walker',
    departmentCode: 'PHYS',
    isActive: true
  },

  // Electrical Engineering Courses
  {
    name: 'Circuit Analysis I',
    code: 'EEE201',
    description: 'Fundamentals of electric circuits. Ohm\'s law, Kirchhoff\'s laws, nodal and mesh analysis, and basic circuit theorems.',
    creditHours: 3,
    contactHours: 45,
    level: 200,
    courseType: 'CORE',
    prerequisites: '["PHYS102", "MATH102"]',
    corequisites: null,
    learningOutcomes: 'Students will analyze and design basic electric circuits using fundamental principles.',
    syllabus: 'Basic circuit elements, Ohm\'s law, Kirchhoff\'s laws, nodal and mesh analysis, circuit theorems, capacitors and inductors, first-order circuits.',
    assessmentMethods: 'Laboratory reports (25%), Tests (35%), Final exam (40%)',
    recommendedBooks: 'Fundamentals of Electric Circuits by Alexander and Sadiku; Electric Circuits by Nilsson and Riedel',
    departmentCode: 'EEE',
    isActive: true
  },

  // Business Courses
  {
    name: 'Principles of Management',
    code: 'BUS101',
    description: 'Introduction to management principles and practices. Planning, organizing, leading, and controlling in organizations.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: null,
    corequisites: null,
    learningOutcomes: 'Students will understand fundamental management principles and organizational behavior.',
    syllabus: 'Management functions, organizational structure, leadership styles, motivation theories, decision-making, communication, teamwork, organizational culture.',
    assessmentMethods: 'Case studies (30%), Tests (30%), Final exam (40%)',
    recommendedBooks: 'Management by Stephen Robbins and Mary Coulter; Principles of Management by Henri Fayol',
    departmentCode: 'BUS_ADMIN',
    isActive: true
  },
  {
    name: 'Microeconomics',
    code: 'ECON101',
    description: 'Principles of microeconomic theory. Supply and demand, market structures, consumer behavior, and firm decision-making.',
    creditHours: 3,
    contactHours: 45,
    level: 100,
    courseType: 'CORE',
    prerequisites: null,
    corequisites: null,
    learningOutcomes: 'Students will understand microeconomic principles and their applications to business decisions.',
    syllabus: 'Supply and demand, elasticity, consumer choice, production and costs, market structures, factor markets, market failures.',
    assessmentMethods: 'Problem sets (25%), Tests (35%), Final exam (40%)',
    recommendedBooks: 'Principles of Economics by N. Gregory Mankiw; Microeconomics by Robert Pindyck and Daniel Rubinfeld',
    departmentCode: 'ECON',
    isActive: true
  },

  // General Education Courses
  {
    name: 'Technical Writing and Communication',
    code: 'GEN101',
    description: 'Academic and technical writing skills. Research methods, citation styles, presentation skills, and professional communication.',
    creditHours: 2,
    contactHours: 30,
    level: 100,
    courseType: 'GENERAL',
    prerequisites: null,
    corequisites: null,
    learningOutcomes: 'Students will develop effective written and oral communication skills for academic and professional contexts.',
    syllabus: 'Academic writing, research methods, citation and referencing, technical documentation, presentation skills, professional email and reports.',
    assessmentMethods: 'Writing assignments (40%), Presentations (30%), Final project (30%)',
    recommendedBooks: 'The Elements of Style by Strunk and White; Technical Writing by Mike Markel',
    departmentCode: 'CSE', // Can be offered by any department
    isActive: true
  },
  {
    name: 'Critical Thinking and Problem Solving',
    code: 'GEN102',
    description: 'Development of analytical and critical thinking skills. Logic, reasoning, problem-solving methodologies, and decision-making.',
    creditHours: 2,
    contactHours: 30,
    level: 100,
    courseType: 'GENERAL',
    prerequisites: null,
    corequisites: null,
    learningOutcomes: 'Students will develop critical thinking skills and systematic problem-solving approaches.',
    syllabus: 'Logic and reasoning, argument analysis, problem-solving strategies, decision-making frameworks, creative thinking, ethical reasoning.',
    assessmentMethods: 'Case analyses (40%), Group projects (30%), Final exam (30%)',
    recommendedBooks: 'Critical Thinking by Richard Paul and Linda Elder; Thinking, Fast and Slow by Daniel Kahneman',
    departmentCode: 'CSE', // Can be offered by any department
    isActive: true
  }
];

export default coursesData;
